1) As a developer you shouldn't submit the CSRF Token in the URL cuz maybe third parties would be able to see it on the Referrer header
2) you should make the CSRF Token Very Unpredictable to the attacker
3) you shouldn't submit the CSRF Token as a Cookie Value cuz it would be generated dynamicaly on the victim's browser
4) you should submit it as a parameter on the POST Method as hidden field of an HTML form
5) CSRF Token Should be tied with the session Cookie to ensure that this CSRF Token are the right one for this user




Even if an ordinary GET request isn't allowed, some frameworks provide ways of overriding the method specified in the request line. For example, Symfony supports the _method parameter in forms, which takes precedence over the normal method for routing purposes
  Lab: SameSite Lax bypass via method override
    CSRF7.html :)





